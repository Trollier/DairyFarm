@model DairyFarm.Models.CattleCreateViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm()) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <h4>CattleCreateViewModel</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CodeCattle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.CodeCattle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodeCattle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdCattletype, "IdCattletype", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdCattletype", null, "selct Cattletype", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCattletype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdHerd, "IdHerd", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("IdHerd", null, "selct Herd", htmlAttributes: new { @class = "form-control" })
                <input id="btnNewHerd" type="button" value="New Herd" class="btn btn-default" />
                @Html.ValidationMessageFor(model => model.IdHerd, "", new { @class = "text-danger" })
            </div>
        </div>



        <div class="form-group">
            @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MalParent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.MalParent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MalParent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FemaleParent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FemaleParent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FemaleParent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                @Html.EditorFor(model => model.Sex, new {htmlAttributes = new {@class = "form-control"}})
                @Html.ValidationMessageFor(model => model.Sex, "", new {@class = "text-danger"})
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.HealthState, htmlAttributes: new {@class = "control-label col-md-2"})
            <div class="col-md-10">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HealthState, new {htmlAttributes = new {@class = "control-label col-md-3"}})
                    @Html.ValidationMessageFor(model => model.HealthState, "", new {@class = "text-danger"})
                </div>
            </div>
        </div>
        <div id="dialogHealth" title="This is a dialog box" style="display: none">
            <div class="form-group">
                @Html.LabelFor(model => model.IdTreatment, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @Html.EditorFor(model => model.IdTreatment, new {htmlAttributes = new {@class = "form-control"}})
                    @Html.ValidationMessageFor(model => model.IdTreatment, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.HiddenFor(model => model.IdDisease)
                @Html.LabelFor(model => model.IdDisease, htmlAttributes: new {@class = "control-label col-md-2"})
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.IdDisease, new {htmlAttributes = new {@class = "form-control"}})*@
                    <input id="labelDisease" class="form-control" />
                    @Html.ValidationMessageFor(model => model.IdDisease, "", new {@class = "text-danger"})
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.StartDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.StartDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.StartDate, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.VeterinaryVisit, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.VeterinaryVisit)
                        @Html.ValidationMessageFor(model => model.VeterinaryVisit, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.EndDate, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.EndDate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.EndDate, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-default" />
                </div>
            </div>
        </div>
}

<div id="dialogContent" title="This is a dialog box" style="display: none">
    <p>Faut créer un nouveau troupeau</p>

    <form action="#" method="post" id="editForm">
        <label id="IdCattleTypeDialog"></label>
        <input type="text" id="MaxAnimals" name="MaxAnimals" placeholder="maxAnimals" />
        <input type="text" id="Label" name="Label" placeholder="label" />
        <input id="btnCreateHerd" type="button" value="Create Herd" class="btn btn-default" />
        <label id="idMsgError"></label>
    </form>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom")
}
