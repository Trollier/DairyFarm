@model IEnumerable<DairyFarm.Core.DAL.CattleProduction>

@{
    ViewBag.Title = "Productions";
}

<h2>Productions</h2>

    @using (Html.BeginForm("DifferentDateProd", "CattleProductions", FormMethod.Post))
    {
        <h4>Ajouter Traite <b id="showHideTraiteDiv" class="btn btn-default glyphicon glyphicon-plus" bold></b></h4>
        <div class="addProd col-md-3 collapse" id="getTraiteDiv">
            <div class="form-group">
                <label class="control-label col-md-2">Date</label>
                <div class="col-md-10">
                    <input class="form-control" type="date" name="dateProdDifferent" />
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <label class="radio-inline"><input type="radio" value="matin" name="period">Matin</label>
                    <label class="radio-inline"><input type="radio" value="soir" name="period">Soir</label>
                </div>
            </div>
            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Envoyer" class="btn btn-default" />
                </div>
            </div>
        </div>
    }

<div>
    <table class="table  table table-striped liste">
        <thead>
            <tr>
                <th>
                    @Html.DisplayNameFor(model => model.Dateprod)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Period)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Quantity)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Cattle.CodeCattle)
                </th>
                <th>
                    Modifer
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var item in Model)
            {
                <tr>

                    <td>
                        @item.Dateprod.ToShortDateString()
                    </td>
                    <td>
                        @{ var period = item.Period.Hour == 18 ? "Soir" : "Matin";}
                        @period
                    </td>

                    <td>
                        @Html.DisplayFor(modelItem => item.Quantity)
                    </td>
                    <td>
                        @Html.DisplayFor(modelItem => item.Cattle.CodeCattle)
                    </td>
                    <td>
                        @Ajax.ActionLink("Modifier", "Edit", "CattleProductions",
                        new { id = item.IdProduction },
                        new AjaxOptions
                        {
                            HttpMethod = "GET",
                            InsertionMode = InsertionMode.Replace,
                            UpdateTargetId = "divEdit",
                            OnSuccess = "dialogBox('divEdit','Modifier la quantité');"
                        }, htmlAttributes: new { @class = "btn btn-primary" })
                    </td>
                </tr>
            }
        </tbody>
    </table>
    <div id="divEdit">

    </div>
</div>
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom")
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/unobtrusive-ajax")
    @Scripts.Render("~/bundles/bootstrap-dialog")
    @Scripts.Render("~/bundles/dataTable")
    <script>
        $(document).ready(function () {
            $('.table').DataTable({
                "order": [0, 'desc'],
                language: {
                    processing: "Traitement en cours...",
                    search: "Filtre&nbsp;:",
                    lengthMenu: "Afficher _MENU_ &eacute;l&eacute;ments",
                    info: "Affichage de l'&eacute;lement _START_ &agrave; _END_ sur _TOTAL_ &eacute;l&eacute;ments",
                    infoEmpty: "Affichage de l'&eacute;lement 0 &agrave; 0 sur 0 &eacute;l&eacute;ments",
                    infoFiltered: "(filtr&eacute; de _MAX_ &eacute;l&eacute;ments au total)",
                    infoPostFix: "",
                    loadingRecords: "Chargement en cours...",
                    zeroRecords: "Aucun &eacute;l&eacute;ment &agrave; afficher",
                    emptyTable: "Aucune donnée disponible dans le tableau",
                    paginate: {
                        first: "Premier",
                        previous: "Pr&eacute;c&eacute;dent",
                        next: "Suivant",
                        last: "Dernier"
                    },
                    aria: {
                        sortAscending: ": activer pour trier la colonne par ordre croissant",
                        sortDescending: ": activer pour trier la colonne par ordre décroissant"
                    }
                }
            });

            @if (@ViewBag.Message != null)
       {
        <text>

            var jsMessage = '@ViewBag.Message';
            var jsState = '@ViewBag.State';


            if (jsState == 1) {
                BootstrapDialog.alert({
                    title: 'TYPE_SUCCESS',
                    message: jsMessage,
                    type: BootstrapDialog.TYPE_SUCCESS,
                    closable: true,
                });
            } else {
                BootstrapDialog.alert({
                    message: jsMessage,
                    type: BootstrapDialog.TYPE_WARNING,
                    closable: true,
                });
            }
            </text>
    }
        });
        $('#showHideTraiteDiv').on('click', function (e) {
            //e.preventDefault();
            var $collapse = $('#getTraiteDiv');
            if ($collapse.hasClass('in')) {
                $(this).removeClass('glyphicon-minus');
                $(this).addClass('glyphicon-plus');
            } else {
                $(this).removeClass('glyphicon-plus');
                $(this).addClass('glyphicon-minus');
            }
            $collapse.collapse('toggle');
        });
    </script>
}