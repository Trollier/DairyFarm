@using System.Web.UI.WebControls
@model DairyFarm.Web.Models.CattleCreateViewModel

@{
    ViewBag.Title = "Créer";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Ajouter un nouveau animal</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.CodeCattle, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.CodeCattle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CodeCattle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.DateBirth, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.DateBirth, new { htmlAttributes = new { @class = "form-control date" } })
                @Html.ValidationMessageFor(model => model.DateBirth, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("Sex", null, "select sex", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.IdCattletype, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("IdCattletype", null, "select Cattletype", htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.IdCattletype, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.IdHerd, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.DropDownList("IdHerd", null, "select Herd", htmlAttributes: new { @class = "form-control" })
                <input id="btnNewHerd" type="button" value="Nouveau troupeau" class="btn btn-default" />
                @Html.ValidationMessageFor(model => model.IdHerd, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MalParent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.MalParent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.MalParent, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.FemaleParent, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.FemaleParent, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.FemaleParent, "", new { @class = "text-danger" })
            </div>
        </div>


        <div class="form-group">
            @Html.LabelFor(model => model.HealthState, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-8">
                <div class="checkbox">
                    @Html.EditorFor(model => model.HealthState, new { htmlAttributes = new { @class = "control-label", style = "margin-left: 0px;" } })
                    @Html.ValidationMessageFor(model => model.HealthState, "", new { @class = "text-danger" })
                </div>
            </div>
        </div>

        <div id="divDisease"></div>

        @Ajax.ActionLink("new Disease",
                "NewDisease",
                 "Cattle",
                 new AjaxOptions
                 {
                     HttpMethod = "GET",
                     InsertionMode = InsertionMode.Replace,
                     UpdateTargetId = "divDisease",
                     OnSuccess = "setSelect2Disease(); $('#divDisease').addClass('divDisease');"
                 }, htmlAttributes: new { @class = "DisplayNone", id = "newDisease" })

        <div id="divGestation" class="DisplayNone">
            <div class="form-group ">
                @Html.LabelFor(model => model.IsGestation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-8">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsGestation, new { htmlAttributes = new { @class = "control-label", style = "margin-left: 0px;" } })
                        @Html.ValidationMessageFor(model => model.IsGestation, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div id="divDeGestation"></div>
            @Ajax.ActionLink("New Gestation",
        "NewGestation",
        new { id = "newGestation" },
        new AjaxOptions
        {
            HttpMethod = "GET",
            InsertionMode = InsertionMode.Replace,
            UpdateTargetId = "divDeGestation",
            OnSuccess = "setSelect2Gestation(); $('#divDeGestation').addClass('divDeGestation');"
        }, htmlAttributes: new { @class = "DisplayNone", id = "newGestation" })
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-8">
                <input type="submit" value="Créer" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div id="dialogContent" title="This is a dialog box" style="display: none">
    <p>Faut créer un nouveau troupeau</p>

    <form action="#" method="post" id="editForm">
        <label id="IdCattleTypeDialog"></label>
        <input type="text" id="MaxAnimals" name="MaxAnimals" placeholder="maxAnimals" />
        <input type="text" id="Label" name="Label" placeholder="label" />
        <input id="btnCreateHerd" type="button" value="Create Herd" class="btn btn-default" />
        <label id="idMsgError"></label>
    </form>
</div>


<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/custom")
    @Scripts.Render("~/bundles/select2")
    @Scripts.Render("~/bundles/unobtrusive-ajax")
    @Scripts.Render("~/bundles/bootstrap-dialog")

    <script>
        $(document).ready(function () {


            @if (@ViewBag.Message != null)
            {
            <text>
            var jsMessage = '@ViewBag.Message';
            var jsState = '@ViewBag.State';


            if (jsState == 1) {
                BootstrapDialog.alert({
                    title: 'TYPE_SUCCESS',
                    message: jsMessage,
                    type: BootstrapDialog.TYPE_SUCCESS,
                    closable: true,
                });
            } else {
                BootstrapDialog.alert({
                    message: jsMessage,
                    type: BootstrapDialog.TYPE_WARNING,
                    closable: true,
                });
            }
            </text>
        }


        });
        $(function () {
            $('#DateBirth').datepicker({
                format: 'dd/mm/yyyy',
                startDate: '01/01/2000',
                language: 'fr'
            });
        });
    </script>

}
