@{ Layout = null;}
@model DairyFarm.Core.DAL.CattleType

@using (Html.BeginForm(Html.BeginForm("Create", "CattleTypes", FormMethod.Post, htmlAttributes: new { id = "formcreateherd" }))) 
{
    @Html.AntiForgeryToken()
    
    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Label, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Label, new { htmlAttributes = new { @class = "form-control", dataRequired = 1, onfocusout = "CheckLabelType()" } })
                @Html.ValidationMessageFor(model => model.Label, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Sex, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
               @Html.DropDownList("Sex", new SelectList(ViewBag.List, "Text", "Value"), "selectionnez le sexe", new { htmlAttributes = new { @class = "form-control", dataRequired = 1 } })
                @Html.ValidationMessageFor(model => model.Sex, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Rank, htmlAttributes: new { @class = "control-label col-md-4" })
            <div class="col-md-8">
                @Html.EditorFor(model => model.Rank, new { htmlAttributes = new { @class = "form-control", dataRequired = 1 } })
                @Html.ValidationMessageFor(model => model.Rank, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-4 col-md-8">
                <input type="button" value ="Soumettre"onclick="submitForm('#formcreateherd')" id="submitHerd" class="btn btn-default" />
            </div>
        </div>
    </div>
}

